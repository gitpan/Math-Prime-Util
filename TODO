
- Examine behavior near 32-bit limit on 32-bit machines.
  (done for factoring)

- GMP versions of all routines.

- segment sieve should itself use a segment for its primes.
  Today we'd need sqrt(2^64) max = 140MB.  Segmenting would yield under 1MB.

- Add test to check maxbits in compiled library vs. Perl

- Pure perl implementations

- input validation (in XS, or do we need to make Perl wrappers for everything?)

- Faster SQUFOF

- speed up random_prime for large numbers

- better prime count upper/lower bounds

- Thread-safety.  Change all uses of sieve and segment to include a free call.
  For segment we can:
     1) mutex  (holy slowdown, batman)
     2) use one cache, and malloc/free if the cache isn't available.
  For sieve I think we'll need a counting semaphore.
